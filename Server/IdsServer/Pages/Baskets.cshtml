@page
@using DevExpress.Utils
@using IdsServer.Models
@{
    ViewData["Title"] = "Baskets";
}

<h2>@ViewData["Title"]</h2>



@(Html.DevExtreme().DataGrid<BasketDto>() 
    .DataSource(ds => ds.Mvc()
            .Controller("Baskets") 
            .LoadAction("Get")
            .Key("BasketId")
    )
    .RemoteOperations(true) 
    .Columns(columns => {
        columns.AddFor(x => x.OrderDto.OrderInfoDto.OrderNumber).Caption("Reference");
        columns.AddFor(x => x.BasketInfoDto.Date).Caption("Date").Format("dd.MM.yyyy");
        columns.AddFor(x => x.BasketInfoDto.Time).Caption("Time").Format("HH:mm:ss");
    })
    .Paging(paging => paging.PageSize(10)) 
    .FilterRow(filterRow => filterRow.Visible(true)) 
        .MasterDetail(md => md
        .Enabled(true)
        .Template(@<text>
                       @(Html.DevExtreme().DataGrid<OrderItemDto>()
                           .DataSource(d => d.Mvc()
                               .Controller("Baskets")
                               .LoadAction("GetOrderItems")
                               .LoadParams(new { basketId = new JS("data.BasketId") })
                           )
                           .Columns(columns => {
                                columns.AddFor(n => n.ArticleNumber).Caption("Article");
                                columns.AddFor(n => n.Quantity).Caption("Quantity").Format(format =>
                                {
                                    format.Type(Format.Decimal);
                                    format.Precision(2);
                                });
                                columns.AddFor(n => n.OfferPrice).Caption("Offer").Format(format =>
                                {
                                    format.Type(Format.Currency);
                                    format.Currency("EUR");
                                    format.Precision(2);
                                });
                                columns.AddFor(n => n.NetPrice).Caption("Net").Format(format =>
                                {
                                    format.Type(Format.Currency);
                                    format.Currency("EUR");
                                    format.Precision(2);
                                });
                           })
                           .ShowBorders(true)
                       )
                   </text>)
    )
)
